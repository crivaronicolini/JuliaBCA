let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/documents/julia/BCA
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +88 ~/documents/fac/tesis2/cuaderno/tesis/tesis.md
badd +49 src/main.jl
badd +1 ~/documents/julia/RustBCA/src/main.rs
badd +396 ~/documents/julia/RustBCA/src/bca.rs
badd +1 src/interactions.jl
badd +5 src/BCA.jl
badd +76 ~/documents/julia/RustBCA/src/interactions.rs
badd +35 ~/documents/julia/RustBCA/src/consts.rs
badd +416 /usr/lib/rustlib/src/rust/library/std/src/f64.rs
badd +66 src/target.jl
badd +135 ~/documents/julia/RustBCA/src/enums.rs
badd +322 ~/documents/julia/RustBCA/src/material.rs
badd +46 src/particle.jl
badd +259 ~/documents/julia/RustBCA/src/particle.rs
badd +70 ~/documents/julia/RustBCA/src/structs.rs
badd +6 src/physics.jl
badd +220 ~/documents/julia/RustBCA/src/input.rs
badd +38 ~/documents/julia/RustBCA/src/sphere.rs
badd +16 ~/documents/julia/RustBCA/src/geometry.rs
badd +36 ~/documents/julia/RustBCA/RustBCA.h
badd +41 ~/documents/julia/RustBCA/src/physics.rs
badd +1 test/scratchold.jl
badd +22 scratch.jl
badd +835 ~/documents/julia/RustBCA/src/tests.rs
badd +1454 ~/documents/julia/RustBCA/scripts/rustbca.py
badd +390 ~/documents/julia/RustBCA/src/lib.rs
badd +26 ~/documents/julia/RustBCA/examples/boron_nitride_0D.toml
badd +7 test/scratch.jl
badd +39 test/runtests.jl
badd +223 ~/documents/julia/scratch.jl
argglobal
%argdel
$argadd ~/documents/julia/RustBCA/examples/boron_nitride_0D.toml
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit src/target.jl
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 106 + 106) / 212)
exe 'vert 2resize ' . ((&columns * 105 + 106) / 212)
argglobal
balt src/main.jl
let s:l = 2 - ((1 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 064|
wincmd w
argglobal
if bufexists(fnamemodify("src/main.jl", ":p")) | buffer src/main.jl | else | edit src/main.jl | endif
if &buftype ==# 'terminal'
  silent file src/main.jl
endif
balt ~/documents/julia/RustBCA/src/tests.rs
let s:l = 51 - ((33 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 51
normal! 054|
wincmd w
exe 'vert 1resize ' . ((&columns * 106 + 106) / 212)
exe 'vert 2resize ' . ((&columns * 105 + 106) / 212)
tabnext
edit src/main.jl
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 70 + 106) / 212)
exe 'vert 2resize ' . ((&columns * 70 + 106) / 212)
exe 'vert 3resize ' . ((&columns * 70 + 106) / 212)
argglobal
balt test/runtests.jl
let s:l = 300 - ((13 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 300
normal! 09|
wincmd w
argglobal
if bufexists(fnamemodify("test/runtests.jl", ":p")) | buffer test/runtests.jl | else | edit test/runtests.jl | endif
if &buftype ==# 'terminal'
  silent file test/runtests.jl
endif
balt scratch.jl
let s:l = 50 - ((16 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 50
normal! 043|
wincmd w
argglobal
if bufexists(fnamemodify("~/documents/julia/RustBCA/src/tests.rs", ":p")) | buffer ~/documents/julia/RustBCA/src/tests.rs | else | edit ~/documents/julia/RustBCA/src/tests.rs | endif
if &buftype ==# 'terminal'
  silent file ~/documents/julia/RustBCA/src/tests.rs
endif
balt test/runtests.jl
let s:l = 838 - ((15 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 838
normal! 049|
wincmd w
exe 'vert 1resize ' . ((&columns * 70 + 106) / 212)
exe 'vert 2resize ' . ((&columns * 70 + 106) / 212)
exe 'vert 3resize ' . ((&columns * 70 + 106) / 212)
tabnext 2
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
